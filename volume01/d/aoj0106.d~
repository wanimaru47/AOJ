import std.stdio;
import std.string;
import std.conv;
import std.algorithm;

int n;
int[5001] dp;

int dfs(int a, int b, int c, int w) {
    int res = price;
    int t = a * 200 + b * 300 + c * 500;
    if (t > n) return 999999;
    else if (dp[t] > 0) return dp[t];
    else {
        int p1 = res + 380; if ((a + 1) % 5 == 0) p1 = p1 - 380;
        int p2 = res + 550; if ((b + 1) % 4 == 0) p2 = p2 - 330;
        int p3 = res + 850; if ((c + 1) % 5 == 0) p3 = p3 - 306;

        res = min(dfs(a + 1, b, c, p1), dfs(a, b + 1, c, p2), dfs(a, b, c + 1, p3));
        if (res == p1) t += 200;
        else if (res == p2) t += 300;
        else t += 500;
    }

    return dp[t] = res;
}

int main()
{
    for (int i = 0; i < 5001; i++) dp[i] = -1;
    dp[200] = 380;
    dp[300] = 550;
    dp[500] = 850;
    while (true) {
        n = readln().chomp().to!int();
        if (n == 0) break;
        writeln(dfs(0,0,0,0));
    }

    return 0;
}
